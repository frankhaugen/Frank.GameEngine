using SharpHook.Native;

namespace Frank.GameEngine.Input.Converters;

public static class KeyboardKeyConverter
{
    public static KeyboardKey ConvertTo(KeyCode keyCode) =>
        keyCode switch
        {
            KeyCode.VcEnter => KeyboardKey.Enter,
            KeyCode.VcEscape => KeyboardKey.Escape,
            KeyCode.VcBackspace => KeyboardKey.Back,
            KeyCode.VcComma => KeyboardKey.OemComma,
            KeyCode.VcMinus => KeyboardKey.Subtract,
            KeyCode.VcSemicolon => KeyboardKey.OemSemicolon,
            KeyCode.VcSlash => KeyboardKey.Divide,
            KeyCode.VcBackSlash => KeyboardKey.OemBackslash,
            KeyCode.VcPeriod => KeyboardKey.OemPeriod,
            KeyCode.VcTab => KeyboardKey.Tab,
            KeyCode.VcSpace => KeyboardKey.Space,

            KeyCode.Vc0 => KeyboardKey.D0,
            KeyCode.Vc1 => KeyboardKey.D1,
            KeyCode.Vc2 => KeyboardKey.D2,
            KeyCode.Vc3 => KeyboardKey.D3,
            KeyCode.Vc4 => KeyboardKey.D4,
            KeyCode.Vc5 => KeyboardKey.D5,
            KeyCode.Vc6 => KeyboardKey.D6,
            KeyCode.Vc7 => KeyboardKey.D7,
            KeyCode.Vc8 => KeyboardKey.D8,
            KeyCode.Vc9 => KeyboardKey.D9,
            KeyCode.VcA => KeyboardKey.A,
            KeyCode.VcB => KeyboardKey.B,
            KeyCode.VcC => KeyboardKey.C,
            KeyCode.VcD => KeyboardKey.D,
            KeyCode.VcE => KeyboardKey.E,
            KeyCode.VcF => KeyboardKey.F,
            KeyCode.VcG => KeyboardKey.G,
            KeyCode.VcH => KeyboardKey.H,
            KeyCode.VcI => KeyboardKey.I,
            KeyCode.VcJ => KeyboardKey.J,
            KeyCode.VcK => KeyboardKey.K,
            KeyCode.VcL => KeyboardKey.L,
            KeyCode.VcM => KeyboardKey.M,
            KeyCode.VcN => KeyboardKey.N,
            KeyCode.VcO => KeyboardKey.O,
            KeyCode.VcP => KeyboardKey.P,
            KeyCode.VcQ => KeyboardKey.Q,
            KeyCode.VcR => KeyboardKey.R,
            KeyCode.VcS => KeyboardKey.S,
            KeyCode.VcT => KeyboardKey.T,
            KeyCode.VcU => KeyboardKey.U,
            KeyCode.VcV => KeyboardKey.V,
            KeyCode.VcW => KeyboardKey.W,
            KeyCode.VcX => KeyboardKey.X,
            KeyCode.VcY => KeyboardKey.Y,
            KeyCode.VcZ => KeyboardKey.Z,

            KeyCode.VcF1 => KeyboardKey.F1,
            KeyCode.VcF2 => KeyboardKey.F2,
            KeyCode.VcF3 => KeyboardKey.F3,
            KeyCode.VcF4 => KeyboardKey.F4,
            KeyCode.VcF5 => KeyboardKey.F5,
            KeyCode.VcF6 => KeyboardKey.F6,
            KeyCode.VcF7 => KeyboardKey.F7,
            KeyCode.VcF8 => KeyboardKey.F8,
            KeyCode.VcF9 => KeyboardKey.F9,
            KeyCode.VcF10 => KeyboardKey.F10,
            KeyCode.VcF11 => KeyboardKey.F11,
            KeyCode.VcF12 => KeyboardKey.F12,
            KeyCode.VcF13 => KeyboardKey.F13,
            KeyCode.VcF14 => KeyboardKey.F14,
            KeyCode.VcF15 => KeyboardKey.F15,
            KeyCode.VcF16 => KeyboardKey.F16,
            KeyCode.VcF17 => KeyboardKey.F17,
            KeyCode.VcF18 => KeyboardKey.F18,
            KeyCode.VcF19 => KeyboardKey.F19,
            KeyCode.VcF20 => KeyboardKey.F20,
            KeyCode.VcF21 => KeyboardKey.F21,
            KeyCode.VcF22 => KeyboardKey.F22,
            KeyCode.VcF23 => KeyboardKey.F23,
            KeyCode.VcF24 => KeyboardKey.F24,

            KeyCode.VcNumPad0 => KeyboardKey.NumPad0,
            KeyCode.VcNumPad1 => KeyboardKey.NumPad1,
            KeyCode.VcNumPad2 => KeyboardKey.NumPad2,
            KeyCode.VcNumPad3 => KeyboardKey.NumPad3,
            KeyCode.VcNumPad4 => KeyboardKey.NumPad4,
            KeyCode.VcNumPad5 => KeyboardKey.NumPad5,
            KeyCode.VcNumPad6 => KeyboardKey.NumPad6,
            KeyCode.VcNumPad7 => KeyboardKey.NumPad7,
            KeyCode.VcNumPad8 => KeyboardKey.NumPad8,
            KeyCode.VcNumPad9 => KeyboardKey.NumPad9,
            
            KeyCode.VcCapsLock => KeyboardKey.CapsLock,
            KeyCode.VcPageUp => KeyboardKey.PageUp,
            KeyCode.VcPageDown => KeyboardKey.PageDown,
            KeyCode.VcEnd => KeyboardKey.End,
            KeyCode.VcHome => KeyboardKey.Home,
            
            KeyCode.VcLeft => KeyboardKey.Left,
            KeyCode.VcUp => KeyboardKey.Up,
            KeyCode.VcRight => KeyboardKey.Right,
            KeyCode.VcDown => KeyboardKey.Down,
            KeyCode.VcInsert => KeyboardKey.Insert,
            KeyCode.VcDelete => KeyboardKey.Delete,
            KeyCode.VcPrintScreen => KeyboardKey.PrintScreen,
            KeyCode.VcSunHelp => KeyboardKey.Help,
            KeyCode.VcLeftMeta => KeyboardKey.LeftWindows,
            KeyCode.VcRightMeta => KeyboardKey.RightWindows,
            KeyCode.VcNumPadAdd => KeyboardKey.Add,
            KeyCode.VcNumPadMultiply => KeyboardKey.Multiply,
            KeyCode.VcNumPadSubtract => KeyboardKey.Subtract,
            KeyCode.VcNumPadSeparator => KeyboardKey.Separator,
            KeyCode.VcNumPadComma => KeyboardKey.Decimal,
            
            KeyCode.VcLeftShift => KeyboardKey.LeftShift,
            KeyCode.VcLeftControl => KeyboardKey.LeftControl,
            KeyCode.VcLeftAlt => KeyboardKey.LeftAlt,
            KeyCode.VcRightShift => KeyboardKey.RightShift,
            KeyCode.VcRightControl => KeyboardKey.RightControl,
            KeyCode.VcRightAlt => KeyboardKey.RightAlt,
            
            KeyCode.VcVolumeUp => KeyboardKey.VolumeUp,
            KeyCode.VcVolumeDown => KeyboardKey.VolumeDown,
            KeyCode.VcVolumeMute => KeyboardKey.VolumeMute,
            KeyCode.VcMediaNext => KeyboardKey.MediaNextTrack,
            KeyCode.VcMediaPrevious => KeyboardKey.MediaPreviousTrack,
            KeyCode.VcMediaStop => KeyboardKey.MediaStop,
            KeyCode.VcMediaPlay => KeyboardKey.MediaPlayPause,
            
            _ => throw new ArgumentOutOfRangeException(nameof(keyCode), keyCode, null)
        };
}